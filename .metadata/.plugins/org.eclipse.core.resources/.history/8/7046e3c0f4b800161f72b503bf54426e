import java.sql.*;
import java.util.*;


public class Tables {

	public static void add(String Username, String Password,
			String ConnString, String Driver) {

		Connection conn;
//		Statement stmt;
		PreparedStatement stmt = null;
		
		try{
			Class.forName(Driver);
			
			conn = DriverManager.getConnection(ConnString, Username, Password);
			System.out.println("Inserting entries into tables");
						
//			stmt = conn.createStatement();
//			conn.setAutoCommit(false);
//			
//			//sql statement to insert to table authors
//			String SQLAddAuthor = "INSERT INTO authors " +
//					"(authorID, firstName, lastName) " +
//					"VALUES(1, 'J.K', 'Rowling')";
//			//sql statement to insert to table authorISBN
//			String SQLAddAuthorISBN = "INSERT INTO authorISBN " +
//					"(authorId, isbn) " +
//					"VALUES(1, '978140883')";
//			//sql statement to insert to titles
//			String SQLAddTitles = "INSERT INTO titles " +
//					"(isbn, title, editionNumber, copyright, publisherID, price) " +
//					"VALUES('978140883', 'Fantastic Beasts & Where to Find Them', 1, 2001, 1, 12.00)";
//			String SQLAddPublishers = "INSERT INTO publishers " +
//					"(publisherID, publisherName) " +
//					"VALUES(1, 'Bloomsbury')";
//			//adding multiple queries into a batch
//			stmt.addBatch(SQLAddAuthor); stmt.addBatch(SQLAddPublishers); 
//			stmt.addBatch(SQLAddTitles); stmt.addBatch(SQLAddAuthorISBN);
//			
//			
//			
//			SQLAddAuthor = "INSERT INTO authors " +
//					"(authorID, firstName, lastName) " +
//					"VALUES(2, 'Stephen', 'Hawking')";
//			SQLAddAuthorISBN = "INSERT INTO authorISBN " +
//					"(authorId, isbn) " +
//					"VALUES(2, '978159777')";
//			SQLAddTitles = "INSERT INTO titles " +
//					"(isbn, title, editionNumber, copyright, publisherID, price) " +
//					"VALUES('978159777', 'The Universe in a Nutshell', 2, 2001, 2, 35.00)";
//			SQLAddPublishers = "INSERT INTO publishers " +
//					"(publisherID, publisherName) " +
//					"VALUES(2, 'Bantam Spectra')";
//			stmt.addBatch(SQLAddAuthor); stmt.addBatch(SQLAddPublishers); 
//			stmt.addBatch(SQLAddTitles); stmt.addBatch(SQLAddAuthorISBN); 
//
//			
//			
//			SQLAddAuthor = "INSERT INTO authors " +
//					"(authorID, firstName, lastName) " +
//					"VALUES(3, 'F.Scott', 'Fitzgerald')";
//			SQLAddAuthorISBN = "INSERT INTO authorISBN " +
//					"(authorId, isbn) " +
//					"VALUES(3, '9780816082')";
//			SQLAddTitles = "INSERT INTO titles " +
//					"(isbn, title, editionNumber, copyright, publisherID, price) " +
//					"VALUES('9780816082', 'The Great Gatsby', 5, 1925, 3, 20.00)";
//			SQLAddPublishers = "INSERT INTO publishers " +
//					"(publisherID, publisherName) " +
//					"VALUES(3, 'Charles Scribners Sons')";
//			stmt.addBatch(SQLAddAuthor); stmt.addBatch(SQLAddPublishers); 
//			stmt.addBatch(SQLAddTitles); stmt.addBatch(SQLAddAuthorISBN);
//			
//			
//			SQLAddAuthorISBN = "INSERT INTO authorISBN " +
//					"(authorId, isbn) " +
//					"VALUES(1, '747532745')";
//			SQLAddTitles = "INSERT INTO titles " +
//					"(isbn, title, editionNumber, copyright, publisherID, price) " +
//					"VALUES('747532745', 'Harry Potter and the Philosophers Stone', 3, 1997, 1, 30.00)";
//			stmt.addBatch(SQLAddTitles); stmt.addBatch(SQLAddAuthorISBN); 
//			
//			
//			
//			SQLAddAuthor = "INSERT INTO authors " +
//					"(authorID, firstName, lastName) " +
//					"VALUES(4, 'Stephen', 'King')";
//			SQLAddAuthorISBN = "INSERT INTO authorISBN " +
//					"(authorId, isbn) " +
//					"VALUES(4, '9780670813')";
//			SQLAddTitles = "INSERT INTO titles " +
//					"(isbn, title, editionNumber, copyright, publisherID, price) " +
//					"VALUES('9780670813', 'Misery', 1, 1987, 4, 50.00)";
//			SQLAddPublishers = "INSERT INTO publishers " +
//					"(publisherID, publisherName) " +
//					"VALUES(4, 'Viking')";
//			stmt.addBatch(SQLAddAuthor); stmt.addBatch(SQLAddPublishers);
//			stmt.addBatch(SQLAddTitles); stmt.addBatch(SQLAddAuthorISBN); 
//			
//			
//			
//			//executes the batch
//			stmt.executeBatch();
//			conn.commit();
			
			
			//populate authors table
			String SQLAddAuthor = "INSERT INTO authors " +
					"(firstName, lastName) " +
					"VALUES(?, ?)";
			stmt = conn.prepareStatement(SQLAddAuthor);
			
//			class Author {
//				String firstName, lastName;
//				public Author(String firstName, String lastName) {
//					this.firstName = firstName; this.lastName = lastName;
//				}
//			}
//			List<Author> listOfAuthors = new ArrayList<Author>();
//			listOfAuthors.add(new Author("J.K", "Rowling")); 
//			listOfAuthors.add(new Author("F. Scott", "Fitzgerald"));
//			listOfAuthors.add(new Author("Stephen", "Hawking"));
//			listOfAuthors.add(new Author("Stephen", "King"));
//			
//			for(Author a: listOfAuthors) {
//				stmt.setString(1, a.firstName);
//				stmt.setString(2, a.lastName);
//				stmt.execute();
//			}
			
			Map<String, String> AuthorMap = new HashMap<String, String>();
			AuthorMap.put("J.K", "Rowling");
			AuthorMap.put("F. Scott", "Fitzgerald");
			AuthorMap.put("Stephen", "Hacking");
			AuthorMap.put("Stephen", "King");
			
			for(Map.Entry<String, String> entry: AuthorMap.entrySet()) {
				stmt.setString(1, entry.getKey());
				stmt.setString(2, entry.getValue());
				stmt.execute();
			}
			
			
			//populate publishers table
			String SQLAddPublishers = "INSERT INTO publishers " +
										"(publisherName) " +
										"VALUES(?)";
			
			stmt = conn.prepareStatement(SQLAddPublishers);
			
			List<String> listOfPublishers = new ArrayList<String>();
			listOfPublishers.add("Bloomsbury");
			listOfPublishers.add("Bantam Spectra");
			listOfPublishers.add("Charles Scribners Sons");
			listOfPublishers.add("Viking");
			
			for(String s: listOfPublishers) {
				stmt.setString(1, s);
				stmt.execute();
			}
			
			
			
			//populate titles table
			String SQLAddTitles = "INSERT INTO titles " +
									"(isbn, title, editionNumber, copyright, publisherID, price) " +
									"VALUES(?, ?, ?, ?, ?, ?)";
			
			stmt = conn.prepareStatement(SQLAddTitles);
			
			class titles {
				String isbn, title, copyright;
				int editionNumber, publisherID;
				float price;
			
				public titles(String isbn, String title, int editionNumber, 
						String copyright, int publisherID, float price) {
					this.isbn = isbn; this.title = title; this.editionNumber = editionNumber;
					this.copyright = copyright; this.publisherID = publisherID; this.price = price;
				}
			}
			
			List<titles> ListOfTitles = new ArrayList<titles>();
			ListOfTitles.add(new titles("978140883", "Fantastic Beasts & Where to Find Them", 1, "2001", 1, 12.50f));
			ListOfTitles.add(new titles("978159777", "The Universe in a Nutshell", 2, "2001", 2, 35.00f));
			ListOfTitles.add(new titles("978081608", "The Great Gatsby", 5, "1925", 3, 20.99f));
			ListOfTitles.add(new titles("747532745", "Harry Potter and the Philosophers Stone", 3, "1997", 1, 30.00f));
			ListOfTitles.add(new titles("978067081", "Misery", 1, "1987", 4, 50.99f));
			
			for(titles t: ListOfTitles) {
				stmt.setString(1, t.isbn);
				stmt.setString(2, t.title);
				stmt.setInt(3, t.editionNumber);
				stmt.setString(4, t.copyright);
				stmt.setInt(5, t.publisherID);
				stmt.setFloat(6, t.price);
				
				stmt.execute();
			}
			System.out.println("Finished inserting entries");
			
			
			
			
			//populate authorISBN table
			
			stmt.close();
			conn.close();
		}catch(Exception e){
			e.printStackTrace();
		}
		
		
	}

}
